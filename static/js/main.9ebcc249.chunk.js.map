{"version":3,"sources":["img/logo1.svg","Footer.js","pages/Home.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Provider","value","size","href","Home","NavMenu","props","useState","vis","setVis","useEffect","document","querySelector","classList","toggle","aria-label","onClick","setShow","src","logo1","alt","App","content","show","WebFont","load","google","families","Header","bind","this","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,mC,4QCkC5BC,MA7Bf,WACI,OAAO,4BAAQC,UAAU,UACrB,yBAAKA,UAAU,yBACX,4DAEJ,yBAAKA,UAAU,yBACX,wCACA,oDAEJ,yBAAKA,UAAU,yBACX,qCACA,oDAEJ,yBAAKA,UAAU,yBACX,kBAAC,IAAYC,SAAb,CAAsBC,MAAO,CAACC,KAAM,QAChC,uBAAGC,KAAK,yCAAyCJ,UAAU,oBACvD,kBAAC,IAAD,CAAYA,UAAU,oBAE1B,uBAAGI,KAAK,oCAAoCJ,UAAU,oBAClD,kBAAC,IAAD,CAAgBA,UAAU,oBAE9B,uBAAGI,KAAK,qFAAqFJ,UAAU,oBACnG,kBAAC,IAAD,W,MCXLK,MAZf,WAEI,OAAO,0BAAML,UAAU,QACnB,6BAASA,UAAU,iCACf,wBAAIA,UAAU,kBAAd,WACA,uBAAGA,UAAU,iBAAb,oH,sBCyBGM,MA9Bf,SAAiBC,GAAO,IAAD,EAEGC,oBAAS,GAFZ,mBAEZC,EAFY,KAEPC,EAFO,KASnB,OALAC,qBAAW,WACKC,SAASC,cAAc,QAC/BC,UAAUC,OAAO,mBAGlB,gCACH,yBAAKf,UAAU,iBACX,4BAAQA,UAAU,aAAagB,aAAW,kBAAkBC,QAAS,kBAAMP,GAAQD,KAC/E,0BAAMT,UAAU,eAEpB,uBAAGI,KAAK,IAAIa,QAAS,kBAAKV,EAAMW,QAAQ,SAASlB,UAAU,aACvD,yBAAKmB,IAAKC,IAAOC,IAAI,qBAAqBrB,UAAU,oBAExD,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,iBACV,wBAAIA,UAAU,aAAY,uBAAGiB,QAAS,kBAAKV,EAAMW,QAAQ,SAASlB,UAAU,aAAlD,SAC1B,wBAAIA,UAAU,aAAY,uBAAGiB,QAAS,kBAAKV,EAAMW,QAAQ,WAAWlB,UAAU,aAApD,WAC1B,wBAAIA,UAAU,aAAY,uBAAGiB,QAAS,kBAAKV,EAAMW,QAAQ,cAAclB,UAAU,aAAvD,cAC1B,wBAAIA,UAAU,aAAY,uBAAGiB,QAAS,kBAAKV,EAAMW,QAAQ,WAAWlB,UAAU,aAApD,UAC1B,wBAAIA,UAAU,aAAY,uBAAGiB,QAAS,kBAAKV,EAAMW,QAAQ,YAAYlB,UAAU,aAArD,iB,YC2B/BsB,MA1Cf,WAAe,IASPC,EATM,EACcf,mBAAS,QADvB,mBACHgB,EADG,KACGN,EADH,KAUV,OAPAO,IAAQC,KAAK,CACTC,OAAQ,CACJC,SAAU,CAAC,kBAAmB,gCAK/BJ,GASH,IAAK,OACDD,EAAU,kBAAC,EAAD,MACV,MAUJ,QACIA,EAAU,4BAAKC,EAAL,2BAGlB,OAAO,6BACH,kBAACK,EAAD,CAAQX,QAASA,EAAQY,KAAKC,QAC7BR,EACD,kBAAC,EAAD,QCtCYS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3B,SAAS4B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9ebcc249.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.d6f76ac6.svg\";","import React from 'react';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaLinkedin, FaGithubSquare, FaFileAlt } from 'react-icons/fa';\r\nimport './styles/styles-footer.css';\r\n\r\nfunction Footer(){\r\n    return <footer className=\"footer\">\r\n        <div className=\"footer-1 footer__item\">\r\n            <p>Open to new opportunities :)</p>\r\n        </div>\r\n        <div className=\"footer-2 footer__item\">\r\n            <h4>Location</h4>\r\n            <p>Bay Area, California</p>\r\n        </div>\r\n        <div className=\"footer-3 footer__item\">\r\n            <h4>Email</h4>    \r\n            <p>kluceycose@gmail.com</p>\r\n        </div>        \r\n        <div className=\"footer-4 footer__item\">\r\n            <IconContext.Provider value={{size: \"3em\"}}>\r\n                <a href=\"https://www.linkedin.com/in/kluceycose\" className=\"footer-icon-link\">\r\n                    <FaLinkedin className=\"footer-4__item\"/>\r\n                </a>\r\n                <a href=\"https://www.github.com/kluceycose\" className=\"footer-icon-link\">\r\n                    <FaGithubSquare className=\"footer-4__item\"/>\r\n                </a>\r\n                <a href=\"https://drive.google.com/file/d/1oWmW6b938_0jvvgnOJtN-7sof2zTqsXn/view?usp=sharing\" className=\"footer-icon-link\">\r\n                    <FaFileAlt />\r\n                </a>\r\n            </IconContext.Provider>\r\n        </div>\r\n    </footer>\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nimport '../styles/styles-body.css';\r\n\r\nfunction Home(){\r\n\r\n    return <main className=\"main\">\r\n        <section className=\"section-welcome container row\">\r\n            <h1 className=\"welcome__title\">Welcome</h1>\r\n            <p className=\"welcome__text\">Thank you for visiting my website! Please feel free to look around, and contact me if you have any questions.</p>\r\n        </section>\r\n\r\n        \r\n    </main>;\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport logo1 from './img/logo1.svg';\r\nimport './styles/styles-header.css';\r\n\r\nfunction NavMenu(props){\r\n\r\n    const [vis, setVis] = useState(false);\r\n\r\n    useEffect (() => {\r\n        const nav = document.querySelector('.nav');\r\n        nav.classList.toggle('nav--visible');\r\n    });\r\n\r\n    return <header>\r\n        <div className=\"container row\">\r\n            <button className=\"nav-toggle\" aria-label=\"open navigation\" onClick={() => setVis(!vis)}>\r\n                <span className=\"hamburger\"></span>\r\n            </button>\r\n            <a href=\"#\" onClick={()=> props.setShow(\"Home\")} className=\"nav__link\">\r\n                <img src={logo1} alt=\"Kenneth Lucey-Cose\" className=\"logo nav__link\"/>\r\n            </a>\r\n            <nav className=\"nav nav--visible\">\r\n                <ul className=\"nav__list row\">\r\n                    <li className=\"nav__item\"><a onClick={()=> props.setShow(\"Home\")} className=\"nav__link\">Home</a></li>\r\n                    <li className=\"nav__item\"><a onClick={()=> props.setShow(\"Resume\")} className=\"nav__link\">Resume</a></li>\r\n                    <li className=\"nav__item\"><a onClick={()=> props.setShow(\"Portfolio\")} className=\"nav__link\">Portfolio</a></li>\r\n                    <li className=\"nav__item\"><a onClick={()=> props.setShow(\"Resume\")} className=\"nav__link\">About</a></li>\r\n                    <li className=\"nav__item\"><a onClick={()=> props.setShow(\"Contact\")} className=\"nav__link\">Contact</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    </header>;\r\n}\r\n\r\nexport default NavMenu;","import React, { useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\n// import About from \"./About.js\";\r\n// import Contact from \"./Contact.js\"\r\nimport Footer from \"./Footer.js\";\r\nimport Home from \"./pages/Home.js\";\r\nimport Header from \"./Header.js\";\r\n// import Portfolio from \"./Portfolio.js\";\r\n// import Resume from \"./Resume.js\";\r\nimport './styles/styles-general.css';\r\nimport './styles/styles-background.css';\r\n\r\nfunction App(){\r\n    const [show, setShow] = useState(\"Home\");\r\n\r\n    WebFont.load({\r\n        google: {\r\n            families: ['Roboto: 400,900', 'Playfair Display: 500,900']\r\n        }\r\n    })\r\n\r\n    let content;\r\n    switch(show){\r\n        // case \"About\":\r\n        //     content = <About />;\r\n        //     break;\r\n        \r\n        // case \"Contact\":\r\n        //     content = <Contact />;\r\n        //     break;\r\n\r\n        case \"Home\":\r\n            content = <Home />;\r\n            break;\r\n\r\n        // case \"Portfolio\":\r\n        //     content = <Portfolio />;\r\n        //     break;\r\n        \r\n        // case \"Resume\":\r\n        //     content = <Resume />;\r\n        //     break;\r\n\r\n        default:\r\n            content = <h3>{show} isn't implemented yet.</h3>;\r\n    }\r\n\r\n    return <div>\r\n        <Header setShow={setShow.bind(this)}/>\r\n        {content}\r\n        <Footer/>\r\n    </div>;\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}